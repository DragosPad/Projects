@*@using MvcRestaurant.ViewModel*@
@*@using MvcRestaurant.Models*@

@model MvcRestaurant.ViewModel.WaiterTableViewModel
          @using MvcRestaurant.Models

@{
    ViewBag.Title = "TablesView";
}

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>WAITER</legend>
        
      @*  @Html.HiddenFor(model => model.WaiterId)*@
   
        @*<div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Name )
            @Html.ValidationMessageFor(model => model.Name)
        </div>*@

    </fieldset>
    <table>
 <tr>
    <th>
      Table ID
     </th>
    <th>
    Dimension
    </th>
     <th>
         Status
     </th>
     <th>
         Chooese status
     </th>
     <th>
         Write Note
     </th>

    <th></th>
  </tr>
@foreach (var item in Model.Waiter.Tables)
{ 
    <tr>
        <td>
            @item.TableId
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DimensionTable)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DropDownList("Status", ViewBag.EnumList as SelectList)
        
        </td>
        <td>
           @* @Html.ActionLink("Write Note", "WriteNote", "Waiters", new { @class = "Not-active" }, null)*@
            @if (item.Status == Status.Free)
            {
                 @Html.ActionLink("Select status and write note", "WriteNote", "Waiters", new { id = item.WaiterId }, null)
               
            }
            else
            {
             @Html.ActionLink("Select status and write note", "WriteNote", "Waiters", null, new { id = item.WaiterId, @class = "Not-active" })
            }
        </td>
 
    </tr>
 
}
</table>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
